(1)
(-1)
(1--1)
(1-(-1))
((2+3)*2)
((1*2)/(3-5))
(1+(1+(1+(1+1))))

((2 + (5 * 1)) + (7 * (4)))
(
(
2
+
(
5
*
1
)
)
+
(
7
*
(
4
)
)
)


((2+3)*2)
((1*2)/(3-5))
(1+(1+(1+(1+1))))

(3+4) =7
(
3
+
4
)


(
(
1
*
2
)
/
(
3
-
5
)
)



(
3
+
4
)

(((((2+3)*2)+1)+9)--1) = 21
(
(
(
(
(
2
+
3
)
*
2
)
+
1
)
+
9
-
-
1
)
)
mem = 3+4
((3)+"444")        ((3)) => (33)
input: 2\n

rax
((1)-(1))
(-1+2)
((3)+3) (3+3) lhs=6 op=+ mov rax rhs = (2+3) 
reg lhs

flag is it complex //off at the start of evaluate, on after op
flag num to convert //off at start, on at {-|[0-9]}, off after conversion

counter sizeof input
counter = 0 at the start of evaluate, and upon seeing op. counter++ before diving into recursion
	and upon encountering digit or - 

if == "+"
register op = $plus
jump op
plus:
	add lhs rhs 


(EXP-4)
(-4+EXP)

(-3--3)

(-1-1)
(100 + 2)
(100 + (7+8))
